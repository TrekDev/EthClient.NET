using Eth.Abi;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Linq;

namespace EthClient.Test
{
    /// <summary>
    /// Summary description for AbiSerializerTests
    /// </summary>
    [TestClass]
    public class AbiSerializerTest
    {
        private readonly IAbiSerializer _serializer;

        public AbiSerializerTest()
        {
            _serializer = new AbiSerializer();
        }

        [TestMethod]
        public void AbiSerializerShouldSerializeUInt256Correctly()
        {
            IAbiValue value = new UInt256AbiValue(4242424);
            byte[] actual = _serializer.Serialize(value);
            byte[] expected = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xbb, 0xf8 };

            Assert.IsTrue(actual.SequenceEqual(expected));
        }

        [TestMethod]
        public void AbiSerializerShouldSerializeMultipleUInt256Correctly()
        {
            byte[] actual = _serializer.Serialize(new UInt256AbiValue(4242424), new UInt256AbiValue(2424242));
            byte[] expected = new byte[]
            {
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xbb, 0xf8,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0xfd, 0xb2
            };

            Assert.IsTrue(actual.SequenceEqual(expected));
        }
    }
}
